import 'package:aberno_test/assets/colors/colors.dart';
import 'package:aberno_test/assets/constants/icons.dart';
import 'package:aberno_test/core/data/singletons/storage.dart';
import 'package:aberno_test/features/call/domain/entity/day_type_entity.dart';
import 'package:aberno_test/features/call/presentation/widgets/app_bar_leading.dart';
import 'package:aberno_test/features/call/presentation/widgets/bottom_sheets/cannot_get_location.dart';
import 'package:aberno_test/features/call/presentation/widgets/bottom_sheets/day_off_error.dart';
import 'package:aberno_test/features/call/presentation/widgets/bottom_sheets/day_off_success.dart';
import 'package:aberno_test/features/call/presentation/widgets/notification_widget.dart';
import 'package:aberno_test/features/call/presentation/widgets/bottom_sheets/request_location_dialog.dart';
import 'package:aberno_test/features/call/presentation/widgets/bottom_sheets/sent_location.dart';
import 'package:aberno_test/features/call/presentation/widgets/tab_bar_widget.dart';
import 'package:flutter/material.dart';

class CallScreen extends StatefulWidget {
  const CallScreen({super.key});

  @override
  State<CallScreen> createState() => _CallScreenState();
}

class _CallScreenState extends State<CallScreen>
    with SingleTickerProviderStateMixin {
  late TabController tabController;
  late List<DayTypeEntity> dayTypes;
  @override
  void initState() {
    super.initState();
    tabController = TabController(length: 2, vsync: this);
    dayTypes = [
      DayTypeEntity(name: "–í—ã—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É", id: 0),
      DayTypeEntity(name: "–í—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å", id: 1),
      DayTypeEntity(name: "–í—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å", id: 2),
      DayTypeEntity(name: "–ï—Å—Ç—å –ø—Ä–∏—á–∏–Ω–∞", id: 3),
      DayTypeEntity(name: "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—è", id: 4),
    ];
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: AppBarLeading(
          onTap: () {
            showModalBottomSheet(
              context: context,
              backgroundColor: Colors.transparent,
              useRootNavigator: true,
              isScrollControlled: true,
              builder: (context) {
                return DayOffSuccess();
              },
            );
          },
        ),
        elevation: 0,
        centerTitle: true,
        leadingWidth: 80,
        title: Text(
          "–ü–Ω, 25 –º–∞—Ä—Ç–∞",
          style: Theme.of(context).textTheme.displaySmall!.copyWith(
                color: prussianBlue,
                fontSize: 18,
              ),
        ),
        actions: [NotificationWidget()],
      ),
      body: Column(
        children: [
          Padding(
            padding: const EdgeInsets.all(20),
            child: Text(
              "–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–º\n–ø–µ—Ä–µ–∫–ª–∏—á–∫—É  üôå",
              style: Theme.of(context).textTheme.displayMedium,
            ),
          ),
          TabBarWidget(tabController: tabController),
          Expanded(
            child: TabBarView(
              controller: tabController,
              physics: const NeverScrollableScrollPhysics(),
              children: [
                Container(),
                Container(),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
